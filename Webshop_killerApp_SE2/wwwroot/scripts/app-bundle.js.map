{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/components/catalog.ts","src/components/home.ts","src/resources/index.ts","src/entities/Category.ts","src/entities/Format.ts","src/entities/Log.ts","src/entities/Order.ts","src/entities/Product.ts","src/entities/Review.ts","src/entities/Tag.ts","src/entities/User.ts","src/services/catalogService.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import 'bootstrap';\r\nimport {Router, RouterConfiguration} from 'aurelia-router'\r\n\r\nexport class App {\r\n    router: Router;\r\n\r\n    configureRouter(config, router) {\r\n        this.router = router;\r\n        config.title = 'Aurelia';\r\n        config.options.pushState = true;\r\n        config.map([\r\n            { route: ['/', 'home'], name: 'home', moduleId: 'components/home' }\r\n        ]);\r\n    }\r\n}","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class Catalog {    \r\n  message: string;\r\n  \r\n  constructor() {\r\n    this.message = 'Hello world';\r\n  }\r\n}","export class Home {    \n  message: string;\n  \n  constructor() {\n    this.message = 'Hello world';\n  }\n}","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","export class Category {\r\n    id : number\r\n    subCategoryOf : number\r\n    name : string\r\n    text : string\r\n}","export class Format {\r\n    text: string\r\n}","export class Log {\r\n    id: number\r\n    user: string\r\n    product: number\r\n    action: string\r\n    date: number\r\n}","export class Order {\r\n    id : number\r\n    user : string \r\n    discountCode : string\r\n    price : number \r\n}","export class Product {\r\n    id : number         \r\n    name : string     \r\n    image : string    \r\n    location : string\r\n    price : number   \r\n    category : number   \r\n    isvisible  : boolean \r\n    author   : string\r\n    discount : string\r\n    text : string     \r\n}","export class Review {\r\n    user: string;\r\n    product: number;\r\n    text: string;\r\n    rating: number;\r\n}\r\n","export class Tag {\r\n    text: string\r\n}","export class User {\r\n    username: string;\r\n    email: string;\r\n}","import { HttpClient, json } from 'aurelia-fetch-client';\nimport { autoinject } from 'aurelia-framework';\nimport { Product } from '../entities/Product';\n\n@autoinject\nexport class catalogService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    public async getPage(I: number): Promise<Product[]> {\n        let response: Response = await this.http.fetch('');\n        let data = await response.json();\n        return data;\n    }\r\n\r\n}"],"sourceRoot":"../.."}